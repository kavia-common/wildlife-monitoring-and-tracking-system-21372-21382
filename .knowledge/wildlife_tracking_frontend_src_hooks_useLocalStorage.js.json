{"is_source_file": true, "format": "JavaScript", "description": "React custom hook 'useLocalStorage' that synchronizes component state with browser localStorage, allowing persistent state across sessions.", "external_files": ["localStorage (browser API)", "react (useEffect, useState hooks)"], "external_methods": ["localStorage.getItem", "localStorage.setItem", "localStorage.removeItem", "JSON.parse", "JSON.stringify"], "published": [], "classes": [], "methods": [{"name": "useLocalStorage(key, initialValue)", "description": "A React custom hook that manages state synchronized with localStorage, initializing from stored data or an initial value and updating localStorage on state changes.", "scope": "", "scopeKind": ""}], "calls": ["localStorage.getItem", "JSON.parse", "localStorage.removeItem", "localStorage.setItem", "JSON.stringify"], "search-terms": ["useLocalStorage", "React custom hook", "localStorage sync", "persistent state", "React useState", "React useEffect"], "state": 2, "file_id": 20, "knowledge_revision": 143, "git_revision": "d35baed2887cb4180e6e390f87aec712acb4aa24", "ctags": [{"_type": "tag", "name": "useLocalStorage", "path": "/home/kavia/workspace/code-generation/wildlife-monitoring-and-tracking-system-21372-21382/wildlife_tracking_frontend/src/hooks/useLocalStorage.js", "pattern": "/^export default function useLocalStorage(key, initialValue) {$/", "language": "JavaScript", "kind": "function", "signature": "(key, initialValue)"}], "hash": "25bfbde0c310718dc114c094d1a3c195", "format-version": 4, "code-base-name": "wildlife_tracking_frontend", "filename": "wildlife_tracking_frontend/src/hooks/useLocalStorage.js", "revision_history": [{"143": "d35baed2887cb4180e6e390f87aec712acb4aa24"}]}